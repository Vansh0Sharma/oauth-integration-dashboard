{"ast":null,"code":"var _jsxFileName = \"/Users/vansshar/Downloads/vansh_sharma_technical_assessment/frontend/src/integrations/hubspot.js\",\n  _s = $RefreshSig$();\n// src/integrations/hubspot.js\n\nimport { useState } from 'react';\nimport { Box, Button } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HUBSPOT_BASE = \"http://localhost:8000/integrations/hubspot\";\nexport const HubspotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [authComplete, setAuthComplete] = useState(false);\n  const handleAuthorize = async () => {\n    try {\n      var _response$data;\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`${HUBSPOT_BASE}/authorize`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.url) {\n        window.location.href = response.data.url;\n      } else {\n        alert(\"Authorization URL not returned.\");\n      }\n    } catch (err) {\n      console.error(\"Authorization error:\", err);\n      alert(\"Failed to start authorization.\");\n    }\n  };\n  const handleGetCredentials = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`${HUBSPOT_BASE}/credentials`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setIntegrationParams({\n        type: 'Hubspot',\n        credentials: response.data\n      });\n      setAuthComplete(true);\n    } catch (err) {\n      console.error(\"Credential fetch error:\", err);\n      alert(\"Failed to retrieve credentials.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleAuthorize,\n      sx: {\n        mb: 1\n      },\n      children: \"Authorize HubSpot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleGetCredentials,\n      disabled: authComplete,\n      children: \"Get HubSpot Credentials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(HubspotIntegration, \"1y1EjN8aUKjZJXqmHhWUyGPd7YY=\");\n_c = HubspotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubspotIntegration\");","map":{"version":3,"names":["useState","Box","Button","axios","jsxDEV","_jsxDEV","HUBSPOT_BASE","HubspotIntegration","user","org","integrationParams","setIntegrationParams","_s","authComplete","setAuthComplete","handleAuthorize","_response$data","formData","FormData","append","response","post","headers","data","url","window","location","href","alert","err","console","error","handleGetCredentials","type","credentials","display","flexDirection","sx","mt","children","variant","onClick","mb","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/vansshar/Downloads/vansh_sharma_technical_assessment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// src/integrations/hubspot.js\n\nimport { useState } from 'react';\nimport {\n    Box,\n    Button,\n} from '@mui/material';\nimport axios from 'axios';\n\nconst HUBSPOT_BASE = \"http://localhost:8000/integrations/hubspot\";\n\nexport const HubspotIntegration = ({ user, org, integrationParams, setIntegrationParams }) => {\n    const [authComplete, setAuthComplete] = useState(false);\n\n    const handleAuthorize = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"user_id\", user);\n            formData.append(\"org_id\", org);\n\n            const response = await axios.post(`${HUBSPOT_BASE}/authorize`, formData, {\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n\n            if (response.data?.url) {\n                window.location.href = response.data.url;\n            } else {\n                alert(\"Authorization URL not returned.\");\n            }\n        } catch (err) {\n            console.error(\"Authorization error:\", err);\n            alert(\"Failed to start authorization.\");\n        }\n    };\n\n    const handleGetCredentials = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"user_id\", user);\n            formData.append(\"org_id\", org);\n\n            const response = await axios.post(`${HUBSPOT_BASE}/credentials`, formData, {\n                headers: { \"Content-Type\": \"multipart/form-data\" },\n            });\n\n            setIntegrationParams({\n                type: 'Hubspot',\n                credentials: response.data,\n            });\n            setAuthComplete(true);\n        } catch (err) {\n            console.error(\"Credential fetch error:\", err);\n            alert(\"Failed to retrieve credentials.\");\n        }\n    };\n\n    return (\n        <Box display='flex' flexDirection='column' sx={{ mt: 2 }}>\n            <Button\n                variant=\"contained\"\n                onClick={handleAuthorize}\n                sx={{ mb: 1 }}\n            >\n                Authorize HubSpot\n            </Button>\n            <Button\n                variant=\"contained\"\n                onClick={handleGetCredentials}\n                disabled={authComplete}\n            >\n                Get HubSpot Credentials\n            </Button>\n        </Box>\n    );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}